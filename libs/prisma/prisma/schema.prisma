generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["app", "ids"]
}

model account {
  account_id         Int              @id @default(autoincrement())
  created_date       DateTime         @default(now()) @db.Timestamp(6)
  updated_date       DateTime         @default(now()) @db.Timestamp(6)
  created_user       Int
  updated_user       Int
  is_deleted         Boolean          @default(false)
  username           String           @db.VarChar(50)
  hash_password      String?          @db.VarChar
  email              String?          @db.VarChar
  phone_number       String?          @db.VarChar(15)
  access_token       String?          @db.VarChar
  exp_access_token   DateTime?        @db.Timestamp(6)
  refresh_token      String?          @db.VarChar
  exp_refresh_tokenn DateTime?        @db.Timestamp(6)
  account_role       String?          @db.VarChar(50)
  firebase_uid       String?          @db.VarChar(50)
  customer           customer[]
  garage_account     garage_account[]
  notification       notification[]
  participant        participant[]

  @@schema("ids")
}

model customer {
  customer_id      Int                @id @default(autoincrement())
  first_name       String             @db.VarChar(50)
  last_name        String             @db.VarChar(50)
  email            String?            @unique @db.VarChar(100)
  phone_number     String?            @db.VarChar(20)
  address          String?
  date_of_birth    DateTime?          @db.Date
  account_id       Int
  avatar_url       String?            @db.VarChar(255)
  gender           String?            @db.VarChar(25)
  account          account            @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction)
  emergent_request emergent_request[]
  vehicle          vehicle[]

  @@schema("app")
}

model emergent_request {
  emergent_request_id Int      @id @default(autoincrement())
  created_date        DateTime @default(now()) @db.Timestamp(6)
  updated_date        DateTime @default(now()) @db.Timestamp(6)
  created_user        Int?
  updated_user        Int?
  is_deleted          Boolean? @default(false)
  remark              String?  @db.VarChar(255)
  vehicle_id          Int?
  customer_id         Int
  garage_id           Int?
  place_id            Int
  room_uid            String   @default(cuid())
  uid                 String   @default(cuid())
  customer            customer @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction)
  garage              garage?  @relation(fields: [garage_id], references: [garage_id], onDelete: NoAction, onUpdate: NoAction)
  place               place    @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model event_type {
  event_type_id Int      @id @default(autoincrement())
  created_date  DateTime @default(now()) @db.Timestamp(6)
  updated_date  DateTime @default(now()) @db.Timestamp(6)
  created_user  Int
  updated_user  Int
  is_deleted    Boolean  @default(false)
  event_name    String   @db.VarChar
  description   String?

  @@schema("app")
}

model garage {
  garage_id        Int                @id @default(autoincrement())
  created_date     DateTime           @default(now()) @db.Timestamp(6)
  updated_date     DateTime           @default(now()) @db.Timestamp(6)
  created_user     Int
  updated_user     Int
  is_deleted       Boolean            @default(false)
  avatar_url       String?            @db.VarChar
  email            String?            @db.VarChar
  address          String?            @db.VarChar
  introduction     String?            @db.VarChar
  introduction_url String[]           @db.VarChar
  owner_id         String?            @db.VarChar
  place_id         Int
  name             String?            @db.VarChar(255)
  emergent_request emergent_request[]
  place            place              @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  garage_account   garage_account[]
  garage_service   garage_service[]
  service_schedule service_schedule[]

  @@schema("app")
}

model garage_account {
  garage_account_id  Int      @id @default(autoincrement())
  created_date       DateTime @default(now()) @db.Timestamp(6)
  updated_date       DateTime @default(now()) @db.Timestamp(6)
  created_user       Int
  updated_user       Int
  is_deleted         Boolean  @default(false)
  garage_id          Int
  account_id         Int
  is_primary_account Boolean?
  account            account  @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction)
  garage             garage   @relation(fields: [garage_id], references: [garage_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model garage_service {
  garage_service_id Int               @id @default(autoincrement())
  created_date      DateTime          @default(now()) @db.Timestamp(6)
  updated_date      DateTime          @default(now()) @db.Timestamp(6)
  created_user      Int
  updated_user      Int
  is_deleted        Boolean           @default(false)
  service_name      String            @db.VarChar(255)
  description       String?
  price             Decimal?          @db.Decimal(10, 2)
  garage_id         Int
  garage            garage            @relation(fields: [garage_id], references: [garage_id], onDelete: NoAction, onUpdate: NoAction)
  schedule_detail   schedule_detail[]

  @@schema("app")
}

model place {
  place_id         Int                @id @default(autoincrement())
  created_date     DateTime           @default(now()) @db.Timestamp(6)
  updated_date     DateTime           @default(now()) @db.Timestamp(6)
  created_user     Int
  updated_user     Int
  is_deleted       Boolean            @default(false)
  lat              Float
  lng              Float
  emergent_request emergent_request[]
  garage           garage[]

  @@schema("app")
}

model service_schedule {
  service_schedule_id     Int               @id @default(autoincrement())
  created_date            DateTime          @default(now()) @db.Timestamp(6)
  updated_date            DateTime          @default(now()) @db.Timestamp(6)
  created_user            Int
  updated_user            Int
  is_deleted              Boolean           @default(false)
  vehicle_id              Int
  check_in_time           DateTime          @db.Timestamp(6)
  check_out_time          DateTime          @db.Timestamp(6)
  description             String?
  price                   Decimal?          @db.Decimal(10, 2)
  garage_id               Int
  service_schedule_status String            @db.VarChar(50)
  schedule_detail         schedule_detail[]
  garage                  garage            @relation(fields: [garage_id], references: [garage_id], onDelete: NoAction, onUpdate: NoAction)
  vehicle                 vehicle           @relation(fields: [vehicle_id], references: [vehicle_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model spare_part {
  spare_part_id          Int                  @id @default(autoincrement())
  created_date           DateTime             @default(now()) @db.Timestamp(6)
  updated_date           DateTime             @default(now()) @db.Timestamp(6)
  created_user           Int
  updated_user           Int
  is_deleted             Boolean              @default(false)
  part_name              String               @db.VarChar(255)
  part_number            String?              @unique @db.VarChar(50)
  manufacturer           String?              @db.VarChar(100)
  quantity_in_stock      Int?
  unit_price             Decimal?             @db.Decimal(10, 2)
  spare_part_category_id Int?
  spare_part_category    spare_part_category? @relation(fields: [spare_part_category_id], references: [spare_part_category_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model spare_part_category {
  spare_part_category_id Int          @id @default(autoincrement())
  created_date           DateTime?    @default(now()) @db.Timestamp(6)
  updated_date           DateTime?    @default(now()) @db.Timestamp(6)
  created_user           Int
  updated_user           Int
  is_deleted             Boolean      @default(false)
  category_name          String       @db.VarChar(255)
  description            String?
  spare_part             spare_part[]

  @@schema("app")
}

model vehicle {
  vehicle_id       Int                @id @default(autoincrement())
  make             String             @db.VarChar(50)
  model            String             @db.VarChar(50)
  est_year         DateTime           @db.Timestamp(6)
  color            String?            @db.VarChar(30)
  owner_id         Int
  purchase_date    DateTime?          @db.Date
  mileage          Int?
  engine_number    String?            @db.VarChar(50)
  chassis_number   String?            @db.VarChar(50)
  service_schedule service_schedule[]
  customer         customer           @relation(fields: [owner_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model emergent_request_event {
  emergent_request_id Int
  event_id            Int
  ts_created          DateTime @default(now()) @db.Timestamp(6)

  @@id([emergent_request_id, event_id], map: "emergent_request_event_pk")
  @@schema("app")
}

model notification {
  uuid         String    @id @db.Uuid
  content      String?
  title        String?   @db.VarChar(255)
  noti_type    String?   @db.VarChar(50)
  send_time    DateTime? @db.Timestamp(6)
  receive_id   Int?
  created_date DateTime? @default(now()) @db.Timestamp(6)
  updated_date DateTime? @default(now()) @db.Timestamp(6)
  account      account?  @relation(fields: [receive_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("app")
}

model chat_channel {
  channel_id   Int           @id @default(autoincrement())
  channel_name String        @db.VarChar(255)
  created_date DateTime?     @default(now()) @db.Timestamp(6)
  updated_date DateTime?     @default(now()) @db.Timestamp(6)
  is_deleted   Boolean?      @default(false)
  is_group     Boolean?      @default(false)
  message      message[]
  participant  participant[]

  @@schema("app")
}

model message {
  message_id   Int          @id @default(autoincrement())
  channel_id   Int
  sender_id    Int
  content      String
  created_date DateTime?    @default(now()) @db.Timestamp(6)
  updated_date DateTime?    @default(now()) @db.Timestamp(6)
  chat_channel chat_channel @relation(fields: [channel_id], references: [channel_id], onDelete: Cascade)

  @@schema("app")
}

model participant {
  participant_id Int          @default(autoincrement())
  channel_id     Int
  user_id        Int
  joined_date    DateTime?    @default(now()) @db.Timestamp(6)
  updated_date   DateTime?    @default(now()) @db.Timestamp(6)
  is_deleted     Boolean?     @default(false)
  chat_channel   chat_channel @relation(fields: [channel_id], references: [channel_id], onDelete: Cascade)
  account        account      @relation(fields: [user_id], references: [account_id], onDelete: Cascade)

  @@id([channel_id, user_id])
  @@schema("app")
}

model schedule_detail {
  schedule_detail_id Int              @default(autoincrement())
  is_deleted         Boolean          @default(false)
  schedule_id        Int
  service_id         Int
  service_schedule   service_schedule @relation(fields: [schedule_id], references: [service_schedule_id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_detail_schedule")
  garage_service     garage_service   @relation(fields: [service_id], references: [garage_service_id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_detail_service")

  @@id([schedule_detail_id, schedule_id, service_id], map: "schedule_detail_PK")
  @@schema("app")
}
